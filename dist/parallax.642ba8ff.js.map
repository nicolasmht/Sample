{"version":3,"sources":["utils/parallax.js"],"names":["offsetTop","element","acc","offsetParent","Parallax","ratio","parseFloat","dataset","parallax","onScroll","bind","onIntersection","elementY","offsetHeight","IntersectionObserver","observe","entries","isIntersecting","document","addEventListener","removeEventListener","window","requestAnimationFrame","screenY","scrollY","innerHeight","diffY","style","setProperty","Array","from","querySelectorAll","map"],"mappings":";AAmDA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,IAAA,EAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlDA,SAASA,EAAUC,GAASC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAC3BD,OAAAA,EAAQD,UACAA,EAAUC,EAAQE,aAAcD,EAAMD,EAAQD,WAElDE,EAAMD,EAAQD,UAGnBI,IAAAA,EAAAA,WACUH,SAAAA,EAAAA,GAAS,EAAA,KAAA,GACZA,KAAAA,QAAUA,EAEVI,KAAAA,MAAQC,WAAWL,EAAQM,QAAQC,UACnCC,KAAAA,SAAW,KAAKA,SAASC,KAAK,MAE9BC,KAAAA,eAAiB,KAAKA,eAAeD,KAAK,MAC1CE,KAAAA,SAAWZ,EAAU,KAAKC,SAAW,KAAKA,QAAQY,aAAe,EACrD,IAAIC,qBAAqB,KAAKH,gBACtCI,QAAQd,GACZQ,KAAAA,WAgCb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,iBA1BI,MAAA,SAAeO,GACQA,IADC,EACDA,EAAAA,EAAAA,GADC,IACQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACfC,gBACLC,SAASC,iBAAiB,SAAU,KAAKV,UACpCG,KAAAA,SAAWZ,EAAU,KAAKC,SAAW,KAAKA,QAAQY,aAAe,GAEtEK,SAASE,oBAAoB,SAAU,KAAKX,WANhC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,OA0B5B,CAAA,IAAA,WAfI,MAAA,WAAW,IAAA,EAAA,KACPY,OAAOC,sBAAsB,WACnBC,IAAAA,EAAUF,OAAOG,QAAUH,OAAOI,YAAc,EAChDC,EAAQ,EAAKd,SAAWW,EAC9B,EAAKtB,QAAQ0B,MAAMC,YAAY,YAA2BF,cAAAA,QAAS,EAATA,EAAa,EAAKrB,MAA5E,aAWZ,CAAA,CAAA,IAAA,OAPI,MAAA,WACWwB,OAAAA,MAAMC,KAAKZ,SAASa,iBAAiB,oBAAoBC,IAAI,SAAC/B,GAC1D,OAAA,IAAIG,EAASH,SAKhC,EA3CMG,GA2CNA,EAASM","file":"parallax.642ba8ff.js","sourceRoot":"../src","sourcesContent":["//Get the position of element from top of the page\nfunction offsetTop(element, acc = 0) {\n    if(element.offsetTop) {\n        return offsetTop(element.offsetParent, acc + element.offsetTop)\n    }\n    return acc + element.offsetTop\n}\n\nclass Parallax {\n    constructor(element) {\n        this.element = element\n\n        this.ratio = parseFloat(element.dataset.parallax)\n        this.onScroll = this.onScroll.bind(this)\n\n        this.onIntersection = this.onIntersection.bind(this)\n        this.elementY = offsetTop(this.element) + this.element.offsetHeight / 2\n        const observer = new IntersectionObserver(this.onIntersection)\n        observer.observe(element)\n        this.onScroll()\n\n        // document.addEventListener('scroll', this.onScroll)\n    }\n\n    //Entries its IntersectionObserverEntry []\n    onIntersection(entries) {\n        for(const entry of entries) {\n            if(entry.isIntersecting) {\n                document.addEventListener('scroll', this.onScroll)\n                this.elementY = offsetTop(this.element) + this.element.offsetHeight / 2\n            } else {\n                document.removeEventListener('scroll', this.onScroll)\n            }\n        }\n    }\n\n    onScroll() {\n        window.requestAnimationFrame(()=> {\n            const screenY = window.scrollY + window.innerHeight / 2\n            const diffY = this.elementY - screenY\n            this.element.style.setProperty(\"transform\", `translateY(${diffY * -1 * this.ratio}px)`)\n        })\n    }\n\n    static bind() {\n        return Array.from(document.querySelectorAll('[data-parallax]')).map((element)=> {\n            return new Parallax(element)\n        })\n    }\n}\n\nParallax.bind()"]}